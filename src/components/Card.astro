---
interface Props {
	title: string;
	body: string;
	href: string;
	skills: string[];
}

const { href, title, body, skills } = Astro.props;
---

<li class="link-card">
	<a href={href} target="_blank">
		<h2>
			{title}
			<span>&rarr;</span>
		</h2>
		<p>
			{body}
		</p>
		<div class="justify">
			{
				skills.map((e) => <span>#{e.toLocaleLowerCase().trim()}</span>)
			}
		</div>
	</a>
</li>
<style>
	.justify {
		display: flex;
		justify-content: space-between;
	}
	.link-card {
		margin-top: 1rem;
		list-style: none;
		display: flex;
		padding: 1px;
		background-color: rgb(var(--straw));
		background-image: none;
		background-size: 400%;
		border-radius: 7px;
		background-position: 100%;
		transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
		box-shadow: inset 0 0 0 1px rgba(173, 29, 29, 0.1);
	}
	.link-card > a {
		width: 100%;
		text-decoration: none;
		line-height: 1.4;
		padding: calc(1.5rem - 1px);
		border-radius: 8px;
		color: rgb(var(--dark-green));
		background-color: rgb(var(--straw));
		opacity: 0.8;
	}
	h2 {
		margin: 0;
		font-size: 1.25rem;
		transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
	}
	p {
		margin-top: 0.5rem;
		margin-bottom: 0;
	}
	.link-card:is(:hover, :focus-within) {
		background-position: 0;
		/* background-image: var(--poli-green); */
		background-color: rgb(var(--poli-green));
	}
	.link-card:is(:hover, :focus-within) h2 {
		color: rgb(var(--straw));
	}
	.link-card:is(:hover, :focus-within) a {
		color: rgb(var(--straw));
		background-color: rgb(var(--poli-green));
	}
</style>
